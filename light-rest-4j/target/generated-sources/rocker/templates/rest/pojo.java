package templates.rest;

import javax.annotation.Generated;
import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import com.jsoniter.any.Any;
// import @ [2:1]
import java.util.Map;
// import @ [3:1]
import java.util.List;

/*
 * Auto generated code to render template templates/rest/pojo.rocker.raw
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@Generated("com.fizzed.rocker.compiler.JavaGenerator") @SuppressWarnings("unused")
public class pojo extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public final com.fizzed.rocker.ContentType CONTENT_TYPE = com.fizzed.rocker.ContentType.RAW;
    static public final String TEMPLATE_NAME = "pojo.rocker.raw";
    static public final String TEMPLATE_PACKAGE_NAME = "templates.rest";
    static public final String HEADER_HASH = "-630606061";
    static public final long MODIFIED_AT = 1518543981000L;
    static public final String[] ARGUMENT_NAMES = { "modelPackage", "className", "classVarName", "props" };

    // argument @ [5:2]
    private String modelPackage;
    // argument @ [5:2]
    private String className;
    // argument @ [5:2]
    private String classVarName;
    // argument @ [5:2]
    private List<Map<String,Any>> props;

    public pojo modelPackage(String modelPackage) {
        this.modelPackage = modelPackage;
        return this;
    }

    public String modelPackage() {
        return this.modelPackage;
    }

    public pojo className(String className) {
        this.className = className;
        return this;
    }

    public String className() {
        return this.className;
    }

    public pojo classVarName(String classVarName) {
        this.classVarName = classVarName;
        return this;
    }

    public String classVarName() {
        return this.classVarName;
    }

    public pojo props(List<Map<String,Any>> props) {
        this.props = props;
        return this;
    }

    public List<Map<String,Any>> props() {
        return this.props;
    }

    static public pojo template(String modelPackage, String className, String classVarName, List<Map<String,Any>> props) {
        return new pojo()
            .modelPackage(modelPackage)
            .className(className)
            .classVarName(classVarName)
            .props(props);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for convenience (runtime auto reloading enabled if rocker.reloading=true)
        return com.fizzed.rocker.runtime.RockerRuntime.getInstance().getBootstrap().template(this.getClass(), this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        // \npackage 
        static private final byte[] PLAIN_TEXT_0_0;
        // ;\nimport java.util.Objects;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class 
        static private final byte[] PLAIN_TEXT_1_0;
        //  {\n\n    
        static private final byte[] PLAIN_TEXT_2_0;
        // \n    
        static private final byte[] PLAIN_TEXT_3_0;
        // private 
        static private final byte[] PLAIN_TEXT_4_0;
        //  
        static private final byte[] PLAIN_TEXT_5_0;
        // ;
        static private final byte[] PLAIN_TEXT_6_0;
        // \n\n    public 
        static private final byte[] PLAIN_TEXT_7_0;
        //  () {\n    }\n\n    
        static private final byte[] PLAIN_TEXT_8_0;
        // \n    @JsonProperty(\"
        static private final byte[] PLAIN_TEXT_9_0;
        // \")\n    public 
        static private final byte[] PLAIN_TEXT_10_0;
        // () {\n        return 
        static private final byte[] PLAIN_TEXT_11_0;
        // ;\n    }\n\n    public void 
        static private final byte[] PLAIN_TEXT_12_0;
        // (
        static private final byte[] PLAIN_TEXT_13_0;
        // ) {\n        this.
        static private final byte[] PLAIN_TEXT_14_0;
        //  = 
        static private final byte[] PLAIN_TEXT_15_0;
        // ;\n    }\n    
        static private final byte[] PLAIN_TEXT_16_0;
        // \n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        
        static private final byte[] PLAIN_TEXT_17_0;
        //  = (
        static private final byte[] PLAIN_TEXT_18_0;
        // ) o;\n\n        return 
        static private final byte[] PLAIN_TEXT_19_0;
        // Objects.equals(
        static private final byte[] PLAIN_TEXT_20_0;
        // , 
        static private final byte[] PLAIN_TEXT_21_0;
        // .
        static private final byte[] PLAIN_TEXT_22_0;
        // ) &&
        static private final byte[] PLAIN_TEXT_23_0;
        // \n        
        static private final byte[] PLAIN_TEXT_24_0;
        // )
        static private final byte[] PLAIN_TEXT_25_0;
        // ;\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(
        static private final byte[] PLAIN_TEXT_26_0;
        // ,
        static private final byte[] PLAIN_TEXT_27_0;
        // );
        static private final byte[] PLAIN_TEXT_28_0;
        // \n    }\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"class 
        static private final byte[] PLAIN_TEXT_29_0;
        //  {\\n\");\n        
        static private final byte[] PLAIN_TEXT_30_0;
        // \n        sb.append(\"    
        static private final byte[] PLAIN_TEXT_31_0;
        // : \").append(toIndentedString(
        static private final byte[] PLAIN_TEXT_32_0;
        // )).append(\"\\n\");
        static private final byte[] PLAIN_TEXT_33_0;
        // \n        sb.append(\"}\");\n        return sb.toString();\n    }\n\n    /**\n     * Convert the given object to string with each line indented by 4 spaces\n     * (except the first line).\n     */\n    private String toIndentedString(Object o) {\n        if (o == null) {\n            return \"null\";\n        }\n        return o.toString().replace(\"\\n\", \"\\n    \");\n    }\n}\n
        static private final byte[] PLAIN_TEXT_34_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(pojo.class.getClassLoader(), pojo.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
            PLAIN_TEXT_5_0 = loader.tryGet("PLAIN_TEXT_5_0");
            PLAIN_TEXT_6_0 = loader.tryGet("PLAIN_TEXT_6_0");
            PLAIN_TEXT_7_0 = loader.tryGet("PLAIN_TEXT_7_0");
            PLAIN_TEXT_8_0 = loader.tryGet("PLAIN_TEXT_8_0");
            PLAIN_TEXT_9_0 = loader.tryGet("PLAIN_TEXT_9_0");
            PLAIN_TEXT_10_0 = loader.tryGet("PLAIN_TEXT_10_0");
            PLAIN_TEXT_11_0 = loader.tryGet("PLAIN_TEXT_11_0");
            PLAIN_TEXT_12_0 = loader.tryGet("PLAIN_TEXT_12_0");
            PLAIN_TEXT_13_0 = loader.tryGet("PLAIN_TEXT_13_0");
            PLAIN_TEXT_14_0 = loader.tryGet("PLAIN_TEXT_14_0");
            PLAIN_TEXT_15_0 = loader.tryGet("PLAIN_TEXT_15_0");
            PLAIN_TEXT_16_0 = loader.tryGet("PLAIN_TEXT_16_0");
            PLAIN_TEXT_17_0 = loader.tryGet("PLAIN_TEXT_17_0");
            PLAIN_TEXT_18_0 = loader.tryGet("PLAIN_TEXT_18_0");
            PLAIN_TEXT_19_0 = loader.tryGet("PLAIN_TEXT_19_0");
            PLAIN_TEXT_20_0 = loader.tryGet("PLAIN_TEXT_20_0");
            PLAIN_TEXT_21_0 = loader.tryGet("PLAIN_TEXT_21_0");
            PLAIN_TEXT_22_0 = loader.tryGet("PLAIN_TEXT_22_0");
            PLAIN_TEXT_23_0 = loader.tryGet("PLAIN_TEXT_23_0");
            PLAIN_TEXT_24_0 = loader.tryGet("PLAIN_TEXT_24_0");
            PLAIN_TEXT_25_0 = loader.tryGet("PLAIN_TEXT_25_0");
            PLAIN_TEXT_26_0 = loader.tryGet("PLAIN_TEXT_26_0");
            PLAIN_TEXT_27_0 = loader.tryGet("PLAIN_TEXT_27_0");
            PLAIN_TEXT_28_0 = loader.tryGet("PLAIN_TEXT_28_0");
            PLAIN_TEXT_29_0 = loader.tryGet("PLAIN_TEXT_29_0");
            PLAIN_TEXT_30_0 = loader.tryGet("PLAIN_TEXT_30_0");
            PLAIN_TEXT_31_0 = loader.tryGet("PLAIN_TEXT_31_0");
            PLAIN_TEXT_32_0 = loader.tryGet("PLAIN_TEXT_32_0");
            PLAIN_TEXT_33_0 = loader.tryGet("PLAIN_TEXT_33_0");
            PLAIN_TEXT_34_0 = loader.tryGet("PLAIN_TEXT_34_0");
        }

        // argument @ [5:2]
        protected final String modelPackage;
        // argument @ [5:2]
        protected final String className;
        // argument @ [5:2]
        protected final String classVarName;
        // argument @ [5:2]
        protected final List<Map<String,Any>> props;

        public Template(pojo model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(CONTENT_TYPE);
            __internal.setTemplateName(TEMPLATE_NAME);
            __internal.setTemplatePackageName(TEMPLATE_PACKAGE_NAME);
            this.modelPackage = model.modelPackage();
            this.className = model.className();
            this.classVarName = model.classVarName();
            this.props = model.props();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [5:97]
            __internal.aboutToExecutePosInTemplate(5, 97);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ValueExpression @ [6:9]
            __internal.aboutToExecutePosInTemplate(6, 9);
            __internal.renderValue(modelPackage, false);
            // PlainText @ [6:22]
            __internal.aboutToExecutePosInTemplate(6, 22);
            __internal.writeValue(PLAIN_TEXT_1_0);
            // ValueExpression @ [10:14]
            __internal.aboutToExecutePosInTemplate(10, 14);
            __internal.renderValue(className, false);
            // PlainText @ [10:24]
            __internal.aboutToExecutePosInTemplate(10, 24);
            __internal.writeValue(PLAIN_TEXT_2_0);
            // ForBlockBegin @ [12:5]
            __internal.aboutToExecutePosInTemplate(12, 5);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(props, (prop) -> {
                    try {
                        // PlainText @ [12:25]
                        __internal.aboutToExecutePosInTemplate(12, 25);
                        __internal.writeValue(PLAIN_TEXT_3_0);
                        // IfBlockBegin @ [13:5]
                        __internal.aboutToExecutePosInTemplate(13, 5);
                        if (prop.get("isEnum").toBoolean()) {
                            // ValueExpression @ [13:42]
                            __internal.aboutToExecutePosInTemplate(13, 42);
                            __internal.renderValue(templates.rest.enumClass.template(prop), false);
                            // IfBlockElse @ [13:82]
                            __internal.aboutToExecutePosInTemplate(13, 82);
                        } else { // else @ [13:82]
                            // PlainText @ [13:90]
                            __internal.aboutToExecutePosInTemplate(13, 90);
                            __internal.writeValue(PLAIN_TEXT_4_0);
                            // ValueExpression @ [13:98]
                            __internal.aboutToExecutePosInTemplate(13, 98);
                            __internal.renderValue(prop.get("type"), false);
                            // PlainText @ [13:115]
                            __internal.aboutToExecutePosInTemplate(13, 115);
                            __internal.writeValue(PLAIN_TEXT_5_0);
                            // ValueExpression @ [13:116]
                            __internal.aboutToExecutePosInTemplate(13, 116);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [13:133]
                            __internal.aboutToExecutePosInTemplate(13, 133);
                            __internal.writeValue(PLAIN_TEXT_6_0);
                            // IfBlockEnd @ [13:5]
                            __internal.aboutToExecutePosInTemplate(13, 5);
                        } // if end @ [13:5]
                        // PlainText @ [13:135]
                        __internal.aboutToExecutePosInTemplate(13, 135);
                        __internal.writeValue(PLAIN_TEXT_3_0);
                        // ForBlockEnd @ [12:5]
                        __internal.aboutToExecutePosInTemplate(12, 5);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [12:5]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [14:6]
            __internal.aboutToExecutePosInTemplate(14, 6);
            __internal.writeValue(PLAIN_TEXT_7_0);
            // ValueExpression @ [16:12]
            __internal.aboutToExecutePosInTemplate(16, 12);
            __internal.renderValue(className, false);
            // PlainText @ [16:22]
            __internal.aboutToExecutePosInTemplate(16, 22);
            __internal.writeValue(PLAIN_TEXT_8_0);
            // ForBlockBegin @ [19:5]
            __internal.aboutToExecutePosInTemplate(19, 5);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(props, (prop) -> {
                    try {
                        // PlainText @ [19:25]
                        __internal.aboutToExecutePosInTemplate(19, 25);
                        __internal.writeValue(PLAIN_TEXT_3_0);
                        // IfBlockBegin @ [20:5]
                        __internal.aboutToExecutePosInTemplate(20, 5);
                        if (prop.get("isEnum").toBoolean()) {
                            // PlainText @ [20:42]
                            __internal.aboutToExecutePosInTemplate(20, 42);
                            __internal.writeValue(PLAIN_TEXT_9_0);
                            // ValueExpression @ [21:21]
                            __internal.aboutToExecutePosInTemplate(21, 21);
                            __internal.renderValue(prop.get("jsonProperty"), false);
                            // PlainText @ [21:46]
                            __internal.aboutToExecutePosInTemplate(21, 46);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ValueExpression @ [22:12]
                            __internal.aboutToExecutePosInTemplate(22, 12);
                            __internal.renderValue(prop.get("nameWithEnum"), false);
                            // PlainText @ [22:37]
                            __internal.aboutToExecutePosInTemplate(22, 37);
                            __internal.writeValue(PLAIN_TEXT_5_0);
                            // ValueExpression @ [22:38]
                            __internal.aboutToExecutePosInTemplate(22, 38);
                            __internal.renderValue(prop.get("getter"), false);
                            // PlainText @ [22:57]
                            __internal.aboutToExecutePosInTemplate(22, 57);
                            __internal.writeValue(PLAIN_TEXT_11_0);
                            // ValueExpression @ [23:16]
                            __internal.aboutToExecutePosInTemplate(23, 16);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [23:33]
                            __internal.aboutToExecutePosInTemplate(23, 33);
                            __internal.writeValue(PLAIN_TEXT_12_0);
                            // ValueExpression @ [26:17]
                            __internal.aboutToExecutePosInTemplate(26, 17);
                            __internal.renderValue(prop.get("setter"), false);
                            // PlainText @ [26:36]
                            __internal.aboutToExecutePosInTemplate(26, 36);
                            __internal.writeValue(PLAIN_TEXT_13_0);
                            // ValueExpression @ [26:37]
                            __internal.aboutToExecutePosInTemplate(26, 37);
                            __internal.renderValue(prop.get("nameWithEnum"), false);
                            // PlainText @ [26:62]
                            __internal.aboutToExecutePosInTemplate(26, 62);
                            __internal.writeValue(PLAIN_TEXT_5_0);
                            // ValueExpression @ [26:63]
                            __internal.aboutToExecutePosInTemplate(26, 63);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [26:80]
                            __internal.aboutToExecutePosInTemplate(26, 80);
                            __internal.writeValue(PLAIN_TEXT_14_0);
                            // ValueExpression @ [27:14]
                            __internal.aboutToExecutePosInTemplate(27, 14);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [27:31]
                            __internal.aboutToExecutePosInTemplate(27, 31);
                            __internal.writeValue(PLAIN_TEXT_15_0);
                            // ValueExpression @ [27:34]
                            __internal.aboutToExecutePosInTemplate(27, 34);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [27:51]
                            __internal.aboutToExecutePosInTemplate(27, 51);
                            __internal.writeValue(PLAIN_TEXT_16_0);
                            // IfBlockElse @ [29:5]
                            __internal.aboutToExecutePosInTemplate(29, 5);
                        } else { // else @ [29:5]
                            // PlainText @ [29:13]
                            __internal.aboutToExecutePosInTemplate(29, 13);
                            __internal.writeValue(PLAIN_TEXT_9_0);
                            // ValueExpression @ [30:21]
                            __internal.aboutToExecutePosInTemplate(30, 21);
                            __internal.renderValue(prop.get("jsonProperty"), false);
                            // PlainText @ [30:46]
                            __internal.aboutToExecutePosInTemplate(30, 46);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ValueExpression @ [31:12]
                            __internal.aboutToExecutePosInTemplate(31, 12);
                            __internal.renderValue(prop.get("type"), false);
                            // PlainText @ [31:29]
                            __internal.aboutToExecutePosInTemplate(31, 29);
                            __internal.writeValue(PLAIN_TEXT_5_0);
                            // ValueExpression @ [31:30]
                            __internal.aboutToExecutePosInTemplate(31, 30);
                            __internal.renderValue(prop.get("getter"), false);
                            // PlainText @ [31:49]
                            __internal.aboutToExecutePosInTemplate(31, 49);
                            __internal.writeValue(PLAIN_TEXT_11_0);
                            // ValueExpression @ [32:16]
                            __internal.aboutToExecutePosInTemplate(32, 16);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [32:33]
                            __internal.aboutToExecutePosInTemplate(32, 33);
                            __internal.writeValue(PLAIN_TEXT_12_0);
                            // ValueExpression @ [35:17]
                            __internal.aboutToExecutePosInTemplate(35, 17);
                            __internal.renderValue(prop.get("setter"), false);
                            // PlainText @ [35:36]
                            __internal.aboutToExecutePosInTemplate(35, 36);
                            __internal.writeValue(PLAIN_TEXT_13_0);
                            // ValueExpression @ [35:37]
                            __internal.aboutToExecutePosInTemplate(35, 37);
                            __internal.renderValue(prop.get("type"), false);
                            // PlainText @ [35:54]
                            __internal.aboutToExecutePosInTemplate(35, 54);
                            __internal.writeValue(PLAIN_TEXT_5_0);
                            // ValueExpression @ [35:55]
                            __internal.aboutToExecutePosInTemplate(35, 55);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [35:72]
                            __internal.aboutToExecutePosInTemplate(35, 72);
                            __internal.writeValue(PLAIN_TEXT_14_0);
                            // ValueExpression @ [36:14]
                            __internal.aboutToExecutePosInTemplate(36, 14);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [36:31]
                            __internal.aboutToExecutePosInTemplate(36, 31);
                            __internal.writeValue(PLAIN_TEXT_15_0);
                            // ValueExpression @ [36:34]
                            __internal.aboutToExecutePosInTemplate(36, 34);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [36:51]
                            __internal.aboutToExecutePosInTemplate(36, 51);
                            __internal.writeValue(PLAIN_TEXT_16_0);
                            // IfBlockEnd @ [20:5]
                            __internal.aboutToExecutePosInTemplate(20, 5);
                        } // if end @ [20:5]
                        // PlainText @ [38:6]
                        __internal.aboutToExecutePosInTemplate(38, 6);
                        __internal.writeValue(PLAIN_TEXT_3_0);
                        // ForBlockEnd @ [19:5]
                        __internal.aboutToExecutePosInTemplate(19, 5);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [19:5]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [39:6]
            __internal.aboutToExecutePosInTemplate(39, 6);
            __internal.writeValue(PLAIN_TEXT_17_0);
            // ValueExpression @ [49:9]
            __internal.aboutToExecutePosInTemplate(49, 9);
            __internal.renderValue(className, false);
            // PlainText @ [49:19]
            __internal.aboutToExecutePosInTemplate(49, 19);
            __internal.writeValue(PLAIN_TEXT_5_0);
            // ValueExpression @ [49:20]
            __internal.aboutToExecutePosInTemplate(49, 20);
            __internal.renderValue(classVarName, false);
            // PlainText @ [49:33]
            __internal.aboutToExecutePosInTemplate(49, 33);
            __internal.writeValue(PLAIN_TEXT_18_0);
            // ValueExpression @ [49:37]
            __internal.aboutToExecutePosInTemplate(49, 37);
            __internal.renderValue(className, false);
            // PlainText @ [49:47]
            __internal.aboutToExecutePosInTemplate(49, 47);
            __internal.writeValue(PLAIN_TEXT_19_0);
            // ForBlockBegin @ [51:16]
            __internal.aboutToExecutePosInTemplate(51, 16);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(props, (i,prop) -> {
                    try {
                        // IfBlockBegin @ [51:41]
                        __internal.aboutToExecutePosInTemplate(51, 41);
                        if (i.index() <  props.size() - 1) {
                            // PlainText @ [51:78]
                            __internal.aboutToExecutePosInTemplate(51, 78);
                            __internal.writeValue(PLAIN_TEXT_20_0);
                            // ValueExpression @ [51:93]
                            __internal.aboutToExecutePosInTemplate(51, 93);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [51:110]
                            __internal.aboutToExecutePosInTemplate(51, 110);
                            __internal.writeValue(PLAIN_TEXT_21_0);
                            // ValueExpression @ [51:112]
                            __internal.aboutToExecutePosInTemplate(51, 112);
                            __internal.renderValue(classVarName, false);
                            // PlainText @ [51:125]
                            __internal.aboutToExecutePosInTemplate(51, 125);
                            __internal.writeValue(PLAIN_TEXT_22_0);
                            // ValueExpression @ [51:126]
                            __internal.aboutToExecutePosInTemplate(51, 126);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [51:143]
                            __internal.aboutToExecutePosInTemplate(51, 143);
                            __internal.writeValue(PLAIN_TEXT_23_0);
                            // IfBlockEnd @ [51:41]
                            __internal.aboutToExecutePosInTemplate(51, 41);
                        } // if end @ [51:41]
                        // PlainText @ [51:148]
                        __internal.aboutToExecutePosInTemplate(51, 148);
                        __internal.writeValue(PLAIN_TEXT_24_0);
                        // IfBlockBegin @ [52:9]
                        __internal.aboutToExecutePosInTemplate(52, 9);
                        if (i.index() == props.size() - 1) {
                            // PlainText @ [52:44]
                            __internal.aboutToExecutePosInTemplate(52, 44);
                            __internal.writeValue(PLAIN_TEXT_20_0);
                            // ValueExpression @ [52:59]
                            __internal.aboutToExecutePosInTemplate(52, 59);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [52:76]
                            __internal.aboutToExecutePosInTemplate(52, 76);
                            __internal.writeValue(PLAIN_TEXT_21_0);
                            // ValueExpression @ [52:78]
                            __internal.aboutToExecutePosInTemplate(52, 78);
                            __internal.renderValue(classVarName, false);
                            // PlainText @ [52:91]
                            __internal.aboutToExecutePosInTemplate(52, 91);
                            __internal.writeValue(PLAIN_TEXT_22_0);
                            // ValueExpression @ [52:92]
                            __internal.aboutToExecutePosInTemplate(52, 92);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [52:109]
                            __internal.aboutToExecutePosInTemplate(52, 109);
                            __internal.writeValue(PLAIN_TEXT_25_0);
                            // IfBlockEnd @ [52:9]
                            __internal.aboutToExecutePosInTemplate(52, 9);
                        } // if end @ [52:9]
                        // ForBlockEnd @ [51:16]
                        __internal.aboutToExecutePosInTemplate(51, 16);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [51:16]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [52:112]
            __internal.aboutToExecutePosInTemplate(52, 112);
            __internal.writeValue(PLAIN_TEXT_26_0);
            // ForBlockBegin @ [57:29]
            __internal.aboutToExecutePosInTemplate(57, 29);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(props, (i,prop) -> {
                    try {
                        // IfBlockBegin @ [57:53]
                        __internal.aboutToExecutePosInTemplate(57, 53);
                        if (i.index() < props.size() - 1) {
                            // ValueExpression @ [57:88]
                            __internal.aboutToExecutePosInTemplate(57, 88);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [57:105]
                            __internal.aboutToExecutePosInTemplate(57, 105);
                            __internal.writeValue(PLAIN_TEXT_27_0);
                            // IfBlockEnd @ [57:53]
                            __internal.aboutToExecutePosInTemplate(57, 53);
                        } // if end @ [57:53]
                        // PlainText @ [57:107]
                        __internal.aboutToExecutePosInTemplate(57, 107);
                        __internal.writeValue(PLAIN_TEXT_5_0);
                        // IfBlockBegin @ [57:108]
                        __internal.aboutToExecutePosInTemplate(57, 108);
                        if (i.index() == props.size() - 1) {
                            // ValueExpression @ [57:144]
                            __internal.aboutToExecutePosInTemplate(57, 144);
                            __internal.renderValue(prop.get("name"), false);
                            // PlainText @ [57:161]
                            __internal.aboutToExecutePosInTemplate(57, 161);
                            __internal.writeValue(PLAIN_TEXT_28_0);
                            // IfBlockEnd @ [57:108]
                            __internal.aboutToExecutePosInTemplate(57, 108);
                        } // if end @ [57:108]
                        // ForBlockEnd @ [57:29]
                        __internal.aboutToExecutePosInTemplate(57, 29);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [57:29]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [57:165]
            __internal.aboutToExecutePosInTemplate(57, 165);
            __internal.writeValue(PLAIN_TEXT_29_0);
            // ValueExpression @ [63:26]
            __internal.aboutToExecutePosInTemplate(63, 26);
            __internal.renderValue(className, false);
            // PlainText @ [63:36]
            __internal.aboutToExecutePosInTemplate(63, 36);
            __internal.writeValue(PLAIN_TEXT_30_0);
            // ForBlockBegin @ [64:9]
            __internal.aboutToExecutePosInTemplate(64, 9);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(props, (prop) -> {
                    try {
                        // PlainText @ [64:28]
                        __internal.aboutToExecutePosInTemplate(64, 28);
                        __internal.writeValue(PLAIN_TEXT_31_0);
                        // ValueExpression @ [65:24]
                        __internal.aboutToExecutePosInTemplate(65, 24);
                        __internal.renderValue(prop.get("name"), false);
                        // PlainText @ [65:41]
                        __internal.aboutToExecutePosInTemplate(65, 41);
                        __internal.writeValue(PLAIN_TEXT_32_0);
                        // ValueExpression @ [65:70]
                        __internal.aboutToExecutePosInTemplate(65, 70);
                        __internal.renderValue(prop.get("name"), false);
                        // PlainText @ [65:87]
                        __internal.aboutToExecutePosInTemplate(65, 87);
                        __internal.writeValue(PLAIN_TEXT_33_0);
                        // ForBlockEnd @ [64:9]
                        __internal.aboutToExecutePosInTemplate(64, 9);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [64:9]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [65:104]
            __internal.aboutToExecutePosInTemplate(65, 104);
            __internal.writeValue(PLAIN_TEXT_34_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "\npackage ";
        static private final String PLAIN_TEXT_1_0 = ";\nimport java.util.Objects;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ";
        static private final String PLAIN_TEXT_2_0 = " {\n\n    ";
        static private final String PLAIN_TEXT_3_0 = "\n    ";
        static private final String PLAIN_TEXT_4_0 = "private ";
        static private final String PLAIN_TEXT_5_0 = " ";
        static private final String PLAIN_TEXT_6_0 = ";";
        static private final String PLAIN_TEXT_7_0 = "\n\n    public ";
        static private final String PLAIN_TEXT_8_0 = " () {\n    }\n\n    ";
        static private final String PLAIN_TEXT_9_0 = "\n    @JsonProperty(\"";
        static private final String PLAIN_TEXT_10_0 = "\")\n    public ";
        static private final String PLAIN_TEXT_11_0 = "() {\n        return ";
        static private final String PLAIN_TEXT_12_0 = ";\n    }\n\n    public void ";
        static private final String PLAIN_TEXT_13_0 = "(";
        static private final String PLAIN_TEXT_14_0 = ") {\n        this.";
        static private final String PLAIN_TEXT_15_0 = " = ";
        static private final String PLAIN_TEXT_16_0 = ";\n    }\n    ";
        static private final String PLAIN_TEXT_17_0 = "\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        ";
        static private final String PLAIN_TEXT_18_0 = " = (";
        static private final String PLAIN_TEXT_19_0 = ") o;\n\n        return ";
        static private final String PLAIN_TEXT_20_0 = "Objects.equals(";
        static private final String PLAIN_TEXT_21_0 = ", ";
        static private final String PLAIN_TEXT_22_0 = ".";
        static private final String PLAIN_TEXT_23_0 = ") &&";
        static private final String PLAIN_TEXT_24_0 = "\n        ";
        static private final String PLAIN_TEXT_25_0 = ")";
        static private final String PLAIN_TEXT_26_0 = ";\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(";
        static private final String PLAIN_TEXT_27_0 = ",";
        static private final String PLAIN_TEXT_28_0 = ");";
        static private final String PLAIN_TEXT_29_0 = "\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"class ";
        static private final String PLAIN_TEXT_30_0 = " {\\n\");\n        ";
        static private final String PLAIN_TEXT_31_0 = "\n        sb.append(\"    ";
        static private final String PLAIN_TEXT_32_0 = ": \").append(toIndentedString(";
        static private final String PLAIN_TEXT_33_0 = ")).append(\"\\n\");";
        static private final String PLAIN_TEXT_34_0 = "\n        sb.append(\"}\");\n        return sb.toString();\n    }\n\n    /**\n     * Convert the given object to string with each line indented by 4 spaces\n     * (except the first line).\n     */\n    private String toIndentedString(Object o) {\n        if (o == null) {\n            return \"null\";\n        }\n        return o.toString().replace(\"\\n\", \"\\n    \");\n    }\n}\n";

    }

}
